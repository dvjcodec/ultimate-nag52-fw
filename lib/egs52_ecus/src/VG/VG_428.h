#ifndef VG_428_H_
#define VG_428_H_

/**
 * AUTOGENERATED BY gen_unions.py
*/
#include <stdint.h>

#define VG_428_ID 0x0428



enum class VG_428_VG_GANG {
    SH_IPG = 0, /** shift in progress */
    LO = 1, /** off-road gear (low range) */
    HI = 2, /** street gang (high range) */
    N = 4, /** neutral gear (not high or low range) */
    SNV = 7, /** signal not available */
};

enum class VG_428_ANFN_VG {
    NOT_DEFINED = 0, /** not defined */
    ANF_N = 1, /** "Neutral" request */
    IDLE = 2, /** No requirement */
    SNV = 3, /** signal not available */
};




typedef union {
    uint8_t bytes[8];
    uint64_t raw;

    // Sets Current gear transfer case
    void set_VG_428_VG_GANG(VG_428_VG_GANG value){ raw = (raw & 0xf8ffffffffffffff) | ((uint64_t)value & 0x7) << 56; }
    // Gets Current gear transfer case
    VG_428_VG_GANG get_VG_GANG() { return (VG_428_VG_GANG)(raw >> 56 & 0x7); }

    // Sets VG error (ECU failure detected)
    void set_VG_ERR(bool value){ raw = (raw & 0xdfffffffffffffff) | ((uint64_t)value & 0x1) << 61; }
    // Gets VG error (ECU failure detected)
    bool get_VG_ERR() { return raw >> 61 & 0x1; }

    // Sets VG
    void set_VG_428_ANFN_VG(VG_428_ANFN_VG value){ raw = (raw & 0xfffcffffffffffff) | ((uint64_t)value & 0x3) << 48; }
    // Gets VG
    VG_428_ANFN_VG get_ANFN_VG() { return (VG_428_ANFN_VG)(raw >> 48 & 0x3); }

    // Sets VG
    void set_ANFNTGL_VG(bool value){ raw = (raw & 0xfffbffffffffffff) | ((uint64_t)value & 0x1) << 50; }
    // Gets VG
    bool get_ANFNTGL_VG() { return raw >> 50 & 0x1; }

    // Sets VG
    void set_ANFNPAR_VG(bool value){ raw = (raw & 0xfff7ffffffffffff) | ((uint64_t)value & 0x1) << 51; }
    // Gets VG
    bool get_ANFNPAR_VG() { return raw >> 51 & 0x1; }

    /** Imports the frame data from a source */
    void import_frame(uint32_t cid, uint8_t* data, uint8_t len) {
        if (cid == VG_428_ID) {
            for (int i = 0; i < len; i++) {
                bytes[7-i] = data[i];
            }
        }
    }

    /** Exports the frame data to a destination */
    void export_frame(uint32_t* cid, uint8_t* data, uint8_t* len) {
        *cid = VG_428_ID;
        *len = 8;
        for (int i = 0; i < *len; i++) {
            data[i] = bytes[7-i];
        }
    }
} VG_428;

#endif
