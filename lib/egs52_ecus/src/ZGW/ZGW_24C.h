#ifndef ZGW_24C_H_
#define ZGW_24C_H_

/**
 * AUTOGENERATED BY gen_unions.py
*/
#include <stdint.h>

#define ZGW_24C_ID 0x024C






typedef union {
    uint8_t bytes[8];
    uint64_t raw;

    // Sets low beam defective driver / left (depending on BR)
    void set_ABL_DEF_F_L(bool value){ raw = (raw & 0xfffffffffeffffff) | ((uint64_t)value & 0x1) << 24; }
    // Gets low beam defective driver / left (depending on BR)
    bool get_ABL_DEF_F_L() { return raw >> 24 & 0x1; }

    // Sets dipped beam defective passenger / right (depending on BR)
    void set_ABL_DEF_BF_R(bool value){ raw = (raw & 0xfffffffffdffffff) | ((uint64_t)value & 0x1) << 25; }
    // Gets dipped beam defective passenger / right (depending on BR)
    bool get_ABL_DEF_BF_R() { return raw >> 25 & 0x1; }

    /** Imports the frame data from a source */
    void import_frame(uint32_t cid, uint8_t* data, uint8_t len) {
        if (cid == ZGW_24C_ID) {
            for (int i = 0; i < len; i++) {
                bytes[7-i] = data[i];
            }
        }
    }

    /** Exports the frame data to a destination */
    void export_frame(uint32_t* cid, uint8_t* data, uint8_t* len) {
        *cid = ZGW_24C_ID;
        *len = 8;
        for (int i = 0; i < *len; i++) {
            data[i] = bytes[7-i];
        }
    }
} ZGW_24C;

#endif
