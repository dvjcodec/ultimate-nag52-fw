#ifndef MS_2F3H_H_
#define MS_2F3H_H_

/**
 * AUTOGENERATED BY gen_unions.py
*/
#include <stdint.h>

#define MS_2F3_ID 0x02F3



enum class MS_2F3H_FSC_IST {
    BLANK = 32, /** Blank ("") */
    ONE = 49, /** speed step "1" */
    TWO = 50, /** speed step "2" */
    THREE = 51, /** speed step "3" */
    ​​FOUR = 52, /** speed step "4" */
    FUENF = 53, /** speed step "5" */
    SIX = 54, /** speed step "6" */
    SEVEN = 55, /** speed step "7" */
    A = 65, /** speed level "A" */
    D = 68, /** speed step "D" */
    F = 70, /** error mark "F" */
    N = 78, /** speed step "N" */
    P = 80, /** speed step "P" */
    R = 82, /** speed step "R" */
    SNV = 255, /** Passive value */
};

enum class MS_2F3H_FSC_SOLL {
    UP = 1, /** "upshift" */
    DOWN = 2, /** "Downshift" */
    PAS = 32, /** Blank ("") */
    ONE = 49, /** speed step "1" */
    TWO = 50, /** speed step "2" */
    THREE = 51, /** speed step "3" */
    ​​FOUR = 52, /** speed step "4" */
    FUENF = 53, /** speed step "5" */
    SIX = 54, /** speed step "6" */
    SEVEN = 55, /** speed step "7" */
    A = 65, /** speed level "A" */
    D = 68, /** speed step "D" */
    F = 70, /** error mark "F" */
    N = 78, /** speed step "N" */
    P = 80, /** speed step "P" */
    R = 82, /** speed step "R" */
    SNV = 255, /** Passive value */
};




typedef union {
    uint8_t bytes[8];
    uint64_t raw;

    // Sets Gear step shift recommendation "Actual"
    void set_MS_2F3H_FSC_IST(uint8_t value){ raw = (raw & 0x00ffffffffffffff) | ((uint64_t)value & 0xff) << 56; }
    // Gets Gear step shift recommendation "Actual"
    MS_2F3H_FSC_IST get_FSC_IST() { return (MS_2F3H_FSC_IST)(raw >> 56 & 0xff); }

    // Sets Gear step shift recommendation "target"
    void set_MS_2F3H_FSC_SOLL(uint8_t value){ raw = (raw & 0xffffffffff00ffff) | ((uint64_t)value & 0xff) << 16; }
    // Gets Gear step shift recommendation "target"
    MS_2F3H_FSC_SOLL get_FSC_SOLL() { return (MS_2F3H_FSC_SOLL)(raw >> 16 & 0xff); }

    /** Imports the frame data from a source */
    void import_frame(uint32_t cid, uint8_t* data, uint8_t len) {
        if (cid == MS_2F3_ID) {
            for (int i = 0; i < len; i++) {
                bytes[7-i] = data[i];
            }
        }
    }

    /** Exports the frame data to a destination */
    void export_frame(uint32_t* cid, uint8_t* data, uint8_t* len) {
        *cid = MS_2F3_ID;
        *len = 8;
        for (int i = 0; i < *len; i++) {
            data[i] = bytes[7-i];
        }
    }
} MS_2F3;

#endif
